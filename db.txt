-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.attributes (
  attribute_id integer NOT NULL DEFAULT nextval('attributes_attribute_id_seq'::regclass),
  category_id integer NOT NULL,
  attribute_name character varying NOT NULL,
  data_type character varying NOT NULL CHECK (data_type::text = ANY (ARRAY['text'::character varying, 'number'::character varying, 'decimal'::character varying, 'date'::character varying]::text[])),
  CONSTRAINT attributes_pkey PRIMARY KEY (attribute_id),
  CONSTRAINT attributes_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(category_id)
);
CREATE TABLE public.categories (
  category_id integer NOT NULL DEFAULT nextval('categories_category_id_seq'::regclass),
  name character varying NOT NULL UNIQUE,
  description text,
  CONSTRAINT categories_pkey PRIMARY KEY (category_id)
);
CREATE TABLE public.customers (
  customer_id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  first_name text NOT NULL,
  last_name text NOT NULL,
  email text UNIQUE,
  phone text,
  address text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT customers_pkey PRIMARY KEY (customer_id)
);
CREATE TABLE public.expenses (
  expense_id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  expense_type text NOT NULL,
  amount numeric NOT NULL,
  expense_date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  description text,
  CONSTRAINT expenses_pkey PRIMARY KEY (expense_id)
);
CREATE TABLE public.inventory (
  product_id integer NOT NULL,
  warehouse_id integer NOT NULL,
  quantity integer NOT NULL DEFAULT 0 CHECK (quantity >= 0),
  CONSTRAINT inventory_pkey PRIMARY KEY (product_id, warehouse_id),
  CONSTRAINT inventory_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(product_id),
  CONSTRAINT inventory_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES public.warehouses(warehouse_id)
);
CREATE TABLE public.inventory_transfers (
  transfer_id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  product_id bigint NOT NULL,
  from_warehouse_id bigint,
  to_store_id bigint,
  quantity integer NOT NULL CHECK (quantity > 0),
  transfer_date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT inventory_transfers_pkey PRIMARY KEY (transfer_id),
  CONSTRAINT inventory_transfers_to_store_id_fkey FOREIGN KEY (to_store_id) REFERENCES public.stores(store_id)
);
CREATE TABLE public.loans (
  loan_id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  loan_amount numeric NOT NULL,
  loan_date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  due_date date,
  status text CHECK (status = ANY (ARRAY['pending'::text, 'paid'::text])),
  customer_id bigint,
  CONSTRAINT loans_pkey PRIMARY KEY (loan_id),
  CONSTRAINT loans_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(customer_id)
);
CREATE TABLE public.product_attributes (
  product_id integer NOT NULL,
  attribute_id integer NOT NULL,
  value_text text,
  value_number integer,
  value_decimal numeric,
  value_date date,
  CONSTRAINT product_attributes_pkey PRIMARY KEY (attribute_id, product_id),
  CONSTRAINT product_attributes_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(product_id),
  CONSTRAINT product_attributes_attribute_id_fkey FOREIGN KEY (attribute_id) REFERENCES public.attributes(attribute_id)
);
CREATE TABLE public.products (
  product_id integer NOT NULL DEFAULT nextval('products_product_id_seq'::regclass),
  category_id integer NOT NULL,
  name character varying NOT NULL,
  description text,
  sku character varying UNIQUE,
  base_price numeric NOT NULL,
  CONSTRAINT products_pkey PRIMARY KEY (product_id),
  CONSTRAINT products_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(category_id)
);
CREATE TABLE public.sale_items (
  sale_item_id integer NOT NULL DEFAULT nextval('sale_items_sale_item_id_seq'::regclass),
  sale_id integer NOT NULL,
  product_id integer NOT NULL,
  quantity integer NOT NULL CHECK (quantity > 0),
  unit_price numeric NOT NULL,
  CONSTRAINT sale_items_pkey PRIMARY KEY (sale_item_id),
  CONSTRAINT sale_items_sale_id_fkey FOREIGN KEY (sale_id) REFERENCES public.sales(sale_id),
  CONSTRAINT sale_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(product_id)
);
CREATE TABLE public.sales (
  sale_id integer NOT NULL DEFAULT nextval('sales_sale_id_seq'::regclass),
  sale_date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  total_amount numeric NOT NULL,
  warehouse_id integer NOT NULL,
  store_id bigint,
  staff_id bigint,
  CONSTRAINT sales_pkey PRIMARY KEY (sale_id),
  CONSTRAINT sales_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(store_id),
  CONSTRAINT sales_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES public.warehouses(warehouse_id),
  CONSTRAINT sales_staff_id_fkey FOREIGN KEY (staff_id) REFERENCES public.staff(staff_id)
);
CREATE TABLE public.staff (
  staff_id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  first_name text NOT NULL,
  last_name text NOT NULL,
  email text UNIQUE,
  phone text,
  role text NOT NULL CHECK (role = ANY (ARRAY['manager'::text, 'salesperson'::text, 'cashier'::text, 'other'::text])),
  hire_date date DEFAULT CURRENT_DATE,
  CONSTRAINT staff_pkey PRIMARY KEY (staff_id)
);
CREATE TABLE public.store_inventory (
  product_id bigint NOT NULL,
  store_id bigint NOT NULL,
  quantity integer NOT NULL DEFAULT 0 CHECK (quantity >= 0),
  CONSTRAINT store_inventory_pkey PRIMARY KEY (product_id, store_id),
  CONSTRAINT store_inventory_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(store_id)
);
CREATE TABLE public.stores (
  store_id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  name text NOT NULL,
  location text,
  CONSTRAINT stores_pkey PRIMARY KEY (store_id)
);
CREATE TABLE public.warehouses (
  warehouse_id integer NOT NULL DEFAULT nextval('warehouses_warehouse_id_seq'::regclass),
  name character varying NOT NULL,
  location text,
  CONSTRAINT warehouses_pkey PRIMARY KEY (warehouse_id)
);